CREATE OR REPLACE TRIGGER UPDATE_SERVER_SALARY
AFTER UPDATE ON ORDER_DETAILS
FOR EACH ROW
BEGIN
    IF :NEW.TOTAL_BILL > 2000 THEN
        UPDATE SERVER
        SET SERVER_SALARY = SERVER_SALARY + 100 
        WHERE SERVER_ID = :NEW.SERVER_ID;
    END IF;
END;

UPDATE ORDER_DETAILS
SET TOTAL_BILL = 2500;

///

CREATE OR REPLACE TRIGGER discount_trigger
BEFORE INSERT ON BILL
FOR EACH ROW
DECLARE
    discount_amount INTEGER;
BEGIN
    IF :NEW.PRICE > 10000 THEN
        discount_amount := :NEW.PRICE * 5 / 100;
        :NEW.PRICE := :NEW.PRICE - discount_amount;
    END IF;
END;

INSERT INTO BILL (BILL_ID, PRICE, DESCRIPTION, DATE_B, ORDER_ID)
VALUES (1, 12000, 'Some description', SYSDATE, 1);
SELECT * FROM BILL;

///

CRAETE OR REPLACE TRIGGER CURRENT_NAMBER_OF_ROW_ORDER
BEFORE INSERT
ON ORDER
FOR EACH ROW
DECLARE
COUNT_N NUMBER;
BEGIN 
    SELECT COUNT(*) INTO COUNT_N FROM ORDER 
    DBMS_OUTPUT.PUT_LINE('CURRENT NUMBER OF ROWS: ' COUNT_N 'OF TABLE ORDER');
END;

///

CREATE OR REPLACE TRIGGER UPDATE_TOTAL_BILL
AFTER INSERT ON BILL
FOR EACH ROW
DECLARE
    v_total_bill INTEGER;
BEGIN
    SELECT SUM(ITEM_COST * QUANTITY) INTO v_total_bill
    FROM ITEMS
    WHERE ITEM_ID IN (
        SELECT ITEM_ID
        FROM ORDER_DETAILS
        WHERE ORDER_ID = :NEW.ORDER_ID
    );
    UPDATE ORDER_DETAILS
    SET TOTAL_BILL = v_total_bill
    WHERE ORDER_ID = :NEW.ORDER_ID;
END;

INSERT INTO BILL (BILL_ID, ORDER_ID)
VALUES (2, 2); 
